CESAR

alfavit =  'ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюяabcdefghijklmnopqrstuvwxyz1234567890'
vbik = int(+1)
message = input("Ведіть слово:")
last = ''
for a in message:
        misce = alfavit.find(a)
        new_misce = misce + vbik
        if a in alfavit:
            last += alfavit[new_misce]
        else:
            last += a
print (last)



CLIENT

name = 0
import socket
#import threading
import time
from scrip import my_decode, my_encode

key = 8194

shutdown = False
join = False


def receving(sock):
    while not shutdown:
        try:
            while True:
                data, addr = sock.recvfrom(1024)
                decrypt = data.decode("utf-8")
                if not ("чату" in decrypt):
                    decrypt = my_decode(decrypt)
                print(decrypt)

                time.sleep(0.2)
        except:
            pass


host = "192.168.56.1"
port = 5555

server = ("192.168.0.1", 5555)

s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.bind((host, port))
s.setblocking(bool(10.0))

alias = input("Name: ")

#rT = threading.Thread(target=receving, args=("RecvThread", s))
#rT.start()

while not shutdown:
    if not join:
        #s.sendto(("[" + alias + "] => Приєднався до чату ").encode("utf-8"), server)
        join = True
    else:
        try:
            message = input()
            message = my_encode(message)
            if message != "":
             s.sendto(("[" + alias + "] :: " + message).encode("utf-8"), server)

            time.sleep(0.2)
        except:
            s.sendto(("[" + alias + "] <= Залишив чат ").encode("utf-8"), server)
            shutdown = True

#rT.join()
s.close()


SERVER

import socket
import time

host = "192.168.0.109"
port = 5555

clients = []


s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.bind((host, port))

quit: bool = False
print("[ Сервер включився ]")

while not quit:
    try:
        data, addr = s.recvfrom(1024)

        if addr not in clients:
            clients.append(addr)

        itsatime = time.strftime("%Y-%m-%d-%H.%M.%S", time.localtime())

        print("[" + addr[0] + "]=[" + str(addr[1]) + "]=[" + itsatime + "]/", end="")
        print(data.decode("utf-8"))

        for client in clients:
            if addr != client:
                s.sendto(data, client)
    except:
        print("\n[ Сервер виключився ]")
        quit = True

s.close()




